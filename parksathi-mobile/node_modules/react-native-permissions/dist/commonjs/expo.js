"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _configPlugins = require("@expo/config-plugins");
var fs = _interopRequireWildcard(require("fs/promises"));
var path = _interopRequireWildcard(require("path"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const requireRegExp = /require Pod::Executable\.execute_command\('node', \['-p',\s*'require\.resolve\(\s*"react-native\/scripts\/react_native_pods\.rb",\s*{paths: \[process\.argv\[1\]]},\s*\)', __dir__\]\)\.strip/;
const prepareRegExp = /prepare_react_native_project!/;
const withPermissions = (config, {
  iosPermissions = []
}) => (0, _configPlugins.withDangerousMod)(config, ['ios', async config => {
  const file = path.join(config.modRequest.platformProjectRoot, 'Podfile');
  const contents = await fs.readFile(file, 'utf8');
  if (iosPermissions.length === 0) {
    return config;
  }
  if (!requireRegExp.test(contents) || !prepareRegExp.test(contents)) {
    console.error("ERROR: Cannot add react-native-permissions to the project's ios/Podfile because it's malformed. Please report this with a copy of your project Podfile.");
    return config;
  }
  const nodeRequire = `
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')
`.trim();
  const setupFunction = `
prepare_react_native_project!

setup_permissions([
  ${iosPermissions.map(permission => `  '${permission}'`).join(',\n')}
])
`.trim();
  await fs.writeFile(file, contents.replace(requireRegExp, nodeRequire).replace(prepareRegExp, setupFunction), 'utf-8');
  return config;
}]);
var _default = exports.default = withPermissions;
//# sourceMappingURL=expo.js.map